name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
        pip install -e .

    - name: Lint with ruff
      run: |
        ruff check . --select=E9,F63,F7,F82
        ruff check . --output-format=github

    - name: Check formatting with black
      run: black --check .

    - name: Type check with mypy
      env:
        MAVA_AUTH_TOKEN: test_token
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_SERVICE_KEY: test_key
      run: mypy mava_sync.py --ignore-missing-imports

    - name: Test with pytest
      env:
        MAVA_AUTH_TOKEN: test_token
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_SERVICE_KEY: test_key
      run: |
        pytest tests/ -v --cov=mava_sync --cov-report=xml --cov-report=term-missing

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit[toml]

    - name: Run safety check
      run: safety check

    - name: Run bandit security linter
      run: bandit -r . -f json -o bandit-report.json || true

    - name: Upload bandit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-report
        path: bandit-report.json

  docker:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t mava-sync:latest .

    - name: Test Docker image
      run: |
        docker run --rm -e MAVA_AUTH_TOKEN=test_token -e SUPABASE_URL=https://test.supabase.co -e SUPABASE_SERVICE_KEY=test_key mava-sync:latest python -c "import mava_sync; print('Import successful')" 